// <auto-generated />
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entities.Migrations
{
    [DbContext(typeof(Db))]
    [Migration("20210203061157_myMigration")]
    partial class myMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Entities.Collections.Carros", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.Property<string>("referenciaProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("idUsuario");

                    b.HasIndex("referenciaProducto");

                    b.ToTable("carros");
                });

            modelBuilder.Entity("Entities.Collections.Personas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("id");

                    b.ToTable("personas");
                });

            modelBuilder.Entity("Entities.Collections.Productos", b =>
                {
                    b.Property<string>("referencia")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<decimal>("valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("referencia");

                    b.ToTable("productos");
                });

            modelBuilder.Entity("Entities.Collections.Usuarios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("idPersona")
                        .HasColumnType("int");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("id");

                    b.HasIndex("idPersona")
                        .IsUnique();

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("Entities.Collections.Carros", b =>
                {
                    b.HasOne("Entities.Collections.Usuarios", "Usuario")
                        .WithMany("carros")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.Collections.Productos", "producto")
                        .WithMany("carros")
                        .HasForeignKey("referenciaProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entities.Collections.Usuarios", b =>
                {
                    b.HasOne("Entities.Collections.Personas", "persona")
                        .WithOne("usuario")
                        .HasForeignKey("Entities.Collections.Usuarios", "idPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("persona");
                });

            modelBuilder.Entity("Entities.Collections.Personas", b =>
                {
                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Entities.Collections.Productos", b =>
                {
                    b.Navigation("carros");
                });

            modelBuilder.Entity("Entities.Collections.Usuarios", b =>
                {
                    b.Navigation("carros");
                });
#pragma warning restore 612, 618
        }
    }
}
